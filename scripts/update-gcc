#!/bin/bash -e

export LC_ALL=C
PN="gcc"

sudo=

[ -d sys-devel ] && cd sys-devel/${PN}
[ -d ../sys-devel ] && cd ../sys-devel/${PN}
if [ ! -e metadata.xml ] ; then
	echo "Run this in the ${PN} dir"
	exit 1
fi

export FEATURES="assume-digests -strict digest"
fetch() {
	${sudo} env GENTOO_MIRRORS=" " FEATURES="${FEATURES}" ebuild $1 fetch
}
manifest() {
	${sudo} ebuild $1 manifest
}

date

wget -nv --no-remove-listing -O /dev/null ftp://sources.redhat.com/pub/${PN}/snapshots/
l=".listing"
sed -i 's/\r$//' ${l}

# First unload ones that no longer exist.
ebuilds=$(echo ${PN}-*_alpha*.ebuild)
for e in ${ebuilds} ; do
	v=$(echo "${e}" | sed -e 's:^gcc-::g' -e 's:.ebuild::g' -e 's:.._alpha:-:g')
	if grep -q "\<${v}$" ${l} ; then
		continue
	fi
	svn rm ${e}
done

# Then load new ones.
majors=$(awk '$(NF-2) ~ /^LATEST-/ { print gensub("LATEST-", "", "", $(NF-2)) }' ${l})
echo "${PN} majors:" ${majors}

lm=
for m in ${majors} ; do
	snaps=$(awk '$NF ~ /^'${m}'-/ { print gensub("'${m}'-", "", "", $NF) }' ${l})
	curr=$(ls ${PN}-${m}.0_alpha* | sort | tail -n 1)
	if [[ -z ${curr} ]] ; then
		curr=$(ls ${PN}-${lm}.0_alpha* | sort | tail -n 1)
		if [[ -z ${curr} ]] ; then
			echo "no current ebuild for major ${m}"
			exit 1
		fi
	fi
	echo "### ${m}: ${curr}"
	for s in ${snaps} ; do
		s="${PN}-${m}.0_alpha${s}.ebuild"
		[[ -e ${s} ]] && continue
		echo " ${s}"
		cp ${curr} ${s}
		fetch ${s}
	done
	lm=${m}
done

rm -f ${l}

manifest ${s}
